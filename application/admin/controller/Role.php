<?php
/**
 * Created by PhpStorm.
 * User: admin
 * Date: 2019/5/31
 * Time: 16:39
 */

namespace app\admin\controller;

use app\admin\agency\role as agency;
use app\admin\agency\permissionGroup as permissionGroupAgency;
use think\Url;

/**
 * Class Role
 * @package app\admin\controller
 */
class Role extends Base
{
    protected $agency;
    protected $permissionAgency;
    protected $permissionGroupAgency;
    protected $url;

    /***
     * @return Base|void
     */
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->agency = new agency();
//        $this->permissionAgency = new permissionAgency();
        $this->permissionGroupAgency = new permissionGroupAgency();
        $this->url = '/' . $this->backendPrefix . '/user/permission/role/list.html';
    }

    /**
     * @return mixed
     */
    public function index()
    {
        $data = $this->agency->getAll();
        if ($data['status'] == true) {
            $this->assign('data', $data['data']);
            $this->assign('count', count($data['data']));
        }
        return $this->fetch();
    }

    /***
     * @return mixed
     */
    public function add()
    {

        if (request()->isGet()) {
            return $this->fetch();
        }

        if (request()->isPost()) {
            $data = input('post.');
            $result = $this->agency->saveData($data);
            if ($result['status'] == false) {
                return show($result['status'], $result['message']);
            }
            return show($result['status'], $result['message'], $this->url);
        }
    }

    public function edit($id)
    {
        if (request()->isGet()) {
            $data = $this->agency->getDataById(['id' => $id]);
            if ($data['status'] == true) {
                $this->assign('data', $data['data']);
            }
            return $this->fetch();
        }
        if (request()->isPost()) {
            $data = input('post.');
            $result = $this->agency->saveData($data);
            if ($result['status'] == false) {
                return show($result['status'], $result['message']);
            }
            return show($result['status'], $result['message'], $this->url);
        }
    }

    public function setpermission($id)
    {
        $plist = $this->agency->getDataWithPermission($id);//获得角色 并且取出角色所拥有的权限
        if (request()->isGet()) {
            $check=$this->agency->checkID(['id'=>$id]);
            if($check['status']=true){
                $data = $this->permissionGroupAgency->getDatawithPermission(); // 这个里是获得权限列表数据
                if ($data['status'] == true) {
                    $this->assign('data', $data['data']);
                    $this->assign('id', $id);
                    $this->assign('plist',$plist);
                }
                return $this->fetch();
            }else{
                return show($check['status'], $check['message']);
            }
        }
        if (request()->isPost()) {
            $data = input('post.');
            $id=$data['id'];
            unset($data['id']);
            $check=$this->agency->checkID(['id'=>$id]);
            if($check['status'] == true){
                $result = $this->agency->savePermission($data, $id);
                if ($result['status'] == false) {
                    return show($result['status'], $result['message']);
                }
                return show($result['status'], $result['message'], $this->url);
            }else{
                return [$check['status'],$check['message']];
            }
        }
    }
}